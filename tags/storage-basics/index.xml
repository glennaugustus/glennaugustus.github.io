<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Storage Basics on glennaugustus.com</title><link>https://glennaugustus.com/tags/storage-basics/</link><description>Recent content in Storage Basics on glennaugustus.com</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 05 Oct 2015 15:18:32 +0000</lastBuildDate><atom:link href="https://glennaugustus.com/tags/storage-basics/index.xml" rel="self" type="application/rss+xml"/><item><title>Storage Basics Part 5 - or DAS ist gut ja!</title><link>https://glennaugustus.com/post/storage-basics-part-5-das-ist-gut-ja/</link><pubDate>Mon, 05 Oct 2015 15:18:32 +0000</pubDate><guid>https://glennaugustus.com/post/storage-basics-part-5-das-ist-gut-ja/</guid><description>&lt;p>I can&amp;rsquo;t believe we are at part 5 in this series already, hopefully for any newcomers to the subject you have been able to pick up some concepts and terminology, and for those with prior experience, a refresher in some areas. In this post we sign off from the basics by looking at a number of typical ways that data can be addressed from an infrastructure perspective.&lt;/p>
&lt;h2 id="block-storage">Block Storage&lt;/h2>
&lt;p>Disks and tapes are written in blocks of data to make it easily readable by machines, it&amp;rsquo;s the most primitive way of addressing the storage which makes it simple and predictable, so remains popular. In a lot of cases it is the right choice for applications that need an uninterrupted path to the raw data, this is usually because the intelligence for managing the integrity of the data is applied at a layer above, for example a relational database or platform specific file system. Using block storage can seem easy, but it&amp;rsquo;s a question of scalability of administration, managing a small number of volumes can be straightforward, managing 10000 volumes? Not such a walk in the park. Almost all storage systems ultimately use block storage as the means to store and retrieve data from a hard disk.&lt;/p></description></item><item><title>Storage Basics Part 4 - or The Dead Parity Sketch</title><link>https://glennaugustus.com/post/storage-basics-part-4-or-the-dead-parity-sketch/</link><pubDate>Mon, 21 Sep 2015 10:09:34 +0000</pubDate><guid>https://glennaugustus.com/post/storage-basics-part-4-or-the-dead-parity-sketch/</guid><description>&lt;p>In parts &lt;a href="https://glennaugustus.com/post/storage-basics-part-1-or-from-disc-to-discovery/">one &lt;/a>&lt;a href="https://glennaugustus.com/post/storage-basics-part-2-or-a-chip-off-the-old-block/">through &lt;/a>&lt;a href="https://glennaugustus.com/post/storage-basics-part-3-or-time-waits-for-no-wan/">three &lt;/a>of this series on the basics of storage we have covered off some of the fundamentals of the subject including why storage is important and made some headway into the terminology, in this post we look at some of the acronyms and initialisms.&lt;/p>
&lt;h2 id="raid">RAID&lt;/h2>
&lt;p>RAID, has evolved its meaning over time from Redundant Array of Inexpensive Disks to Redundant Array of Independent Disks, but its acceptable either way. RAID takes a few forms (known as levels) with the intention to provide virtualization of the underlying storage hardware to increase performance and protection for the data residing on a presentable logical storage device. The levels include&lt;/p></description></item><item><title>Storage Basics Part 3 - or Time Waits For No WAN</title><link>https://glennaugustus.com/post/storage-basics-part-3-or-time-waits-for-no-wan/</link><pubDate>Thu, 10 Sep 2015 13:48:40 +0000</pubDate><guid>https://glennaugustus.com/post/storage-basics-part-3-or-time-waits-for-no-wan/</guid><description>&lt;p>So far in this series we have looked at some of the social aspects of storage as well as starting our journey into the terminology that surrounds the storage industry â€“ as we progress into part three, the terminology drops down a gear and races quickly to the speed of light.&lt;/p>
&lt;h3 id="file-system">File System&lt;/h3>
&lt;p>This is generally a hierarchical structure and map between a human interpretable name, such as &lt;em>/home/glenn&lt;/em> and a set of stored data. This is the piece of software that knows how to find the data in your files. In most operating systems you lay down a file system as part of formatting a disk and there are lots of file system types, with some of the more common ones being ntfs, fat32, ext4 or hfs+.&lt;/p></description></item></channel></rss>